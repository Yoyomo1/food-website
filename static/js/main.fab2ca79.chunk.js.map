{"version":3,"sources":["components/Logo.js","context.js","components/NavBar.js","components/ResultsPage.js","data.js","imgs/search-btn.svg","components/SearchButton.js","components/HomePage.js","components/ErrorPage.js","components/ItemPage.js","components/App.js","index.js"],"names":["Logo","to","className","AppContext","React","createContext","AppProvider","children","value","Provider","useGlobalContext","useContext","SelectMenu","selected","setSelected","name","onChange","e","target","NavBar","setURL","searched","setSearched","setFinalizedSearch","finalizedSearch","setFinalizedSelected","finalizedSelected","isShowingMobileView","history","useHistory","useState","isToggled","setIsToggled","submit","preventDefault","push","icon","faBars","onClick","onSubmit","type","placeholder","Result","result","urlString","strMeal","replaceAll","src","strMealThumb","alt","LoadingBars","ResultsGrid","results","loaded","length","map","idMeal","ResultsPage","setResults","setLoaded","useEffect","changeResults","response","newResults","data","meals","axios","get","then","getResults","queryParams","SearchButton","searchImgSource","Button","button","changeSelected","toLowerCase","toUpperCase","buttons","HomePage","inputRef","useRef","undefined","current","focus","style","height","ref","Header","text","Link","link","href","ErrorPage","ItemPage","useParams","info","setInfo","ingredients","setIngredients","actualName","strArea","embeddedURL","strYoutube","replace","obj","count","Error","measurement","getIngredients","title","frameBorder","App","setIsShowingMobileView","handleResize","window","innerWidth","addEventListener","removeEventListener","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fab2ca79.chunk.js","sourcesContent":["import React from 'react'\nimport \"../styles/Logo.css\"\nimport { Link } from \"react-router-dom\";\n\nconst Logo = () => {\n\n  const text = \"F o o (d)\"\n\n  return (\n    <Link to='/' className='logo-link'>\n      <div className=\"border\">\n        <div className=\"text\">{text}</div>\n      </div>\n    </Link>\n  )\n}\n\nexport default Logo","import React, { useContext } from \"react\";\n\nconst AppContext = React.createContext();\n\nconst AppProvider = ({ children, value }) => {\n  return <AppContext.Provider value={value}>{children}</AppContext.Provider>;\n};\n\n// Custom hook\nconst useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { useGlobalContext, AppProvider };\n","import React, { useState } from \"react\";\nimport \"../styles/NavBar.css\";\nimport Logo from \"./Logo\";\nimport { useGlobalContext } from \"../context\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NavBar = ({\n  setURL,\n  selected,\n  setSelected,\n  searched,\n  setSearched,\n  finalizedSearch,\n  setFinalizedSearch,\n  finalizedSelected,\n  setFinalizedSelected,\n}) => {\n  const { isShowingMobileView } = useGlobalContext();\n  const history = useHistory();\n  const [isToggled, setIsToggled] = useState(false);\n\n  const submit = (e) => {\n    e.preventDefault();\n    setFinalizedSearch(searched);\n    setFinalizedSelected(selected);\n    history.push(\"/results\");\n  };\n\n  // Mobile view with burger menu\n  if (isShowingMobileView) {\n    return (\n      <nav className=\"nav-container\">\n        <div className=\"center-logo\">\n          <Logo />\n          <FontAwesomeIcon\n            icon={faBars}\n            className={`burger-menu ${isToggled ? \"rotate-burger\" : \"\"}`}\n            onClick={() => setIsToggled(!isToggled)}\n          />\n        </div>\n        <div\n          className={`drop-down-menu-container ${\n            isToggled ? \"show-nav-bar\" : \"\"\n          }`}\n        >\n          <form className=\"drop-down-menu\" onSubmit={(e) => submit(e)}>\n            <SelectMenu selected={selected} setSelected={setSelected} />\n            <input\n              type=\"text\"\n              className=\"nav-bar-input\"\n              value={searched}\n              onChange={(e) => setSearched(e.target.value)}\n              placeholder={`Search by ${selected}`}\n            />\n            <button className=\"btn\" type=\"submit\">\n              Search\n            </button>\n          </form>\n        </div>\n      </nav>\n    );\n  }\n  // Desktop view\n  else {\n    return (\n      <>\n        <nav className=\"nav-container\">\n          <Logo />\n          <form className=\"select-input-container\" onSubmit={(e) => submit(e)}>\n            <SelectMenu selected={selected} setSelected={setSelected} />\n            <div className=\"nav-input-container\">\n              <input\n                type=\"text\"\n                className=\"nav-bar-input\"\n                value={searched}\n                onChange={(e) => setSearched(e.target.value)}\n                placeholder={`Search by ${selected}`}\n              />\n              <button className=\"btn\" type=\"submit\">\n                {isShowingMobileView ? \"Search\" : \"\"}\n              </button>\n            </div>\n          </form>\n        </nav>\n      </>\n    );\n  }\n};\n\nconst SelectMenu = ({ selected, setSelected }) => {\n  return (\n    <select\n      className=\"query\"\n      name=\"query\"\n      value={selected}\n      onChange={(e) => setSelected(e.target.value)}\n    >\n      <option value=\"name\">name</option>\n      <option value=\"ingredient\">ingredient</option>\n      <option value=\"category\">category</option>\n      <option value=\"area\">area</option>\n    </select>\n  );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport \"../styles/ResultsPage.css\";\nimport { useGlobalContext } from \"../context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Result = ({ result }) => {\n  const urlString = `/results/${result.strMeal.replaceAll(\" \", \"-\")}`;\n  return (\n    <Link to={urlString} className=\"result-container\">\n      <img src={result.strMealThumb} alt=\"food\" className=\"result-image\" />\n      <div className=\"result-text\">{result.strMeal}</div>\n    </Link>\n  );\n};\n\nconst LoadingBars = () => {\n  return (\n    <div className=\"loading-bars\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nconst ResultsGrid = ({ results, loaded }) => {\n  if (loaded) {\n    if (results && results.length > 0) {\n      return (\n        <div className=\"results-grid-container\">\n          {results.map((result) => (\n            <Result key={result.idMeal} result={result} />\n          ))}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"no-results-text\">\n          We could not find any results matching your search :(\n        </div>\n      );\n    }\n  } else {\n    return <LoadingBars />;\n  }\n};\n\nconst ResultsPage = () => {\n  const {\n    setURL,\n    selected,\n    setSelected,\n    searched,\n    setSearched,\n    finalizedSearch,\n    setFinalizedSearch,\n    finalizedSelected,\n    setFinalizedSelected,\n  } = useGlobalContext();\n\n  const [results, setResults] = useState([]);\n\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoaded(false);\n\n    const getResults = () => {\n      const changeResults = (response) => {\n        const newResults = response.data.meals;\n        setResults(newResults);\n        setLoaded(true);\n      };\n\n      switch (finalizedSelected) {\n        case \"name\":\n          axios\n            .get(\n              `https://www.themealdb.com/api/json/v1/1/search.php?s=${finalizedSearch}`\n            )\n            .then((response) => {\n              changeResults(response);\n            });\n          break;\n        case \"ingredient\":\n          axios\n            .get(\n              `https://www.themealdb.com/api/json/v1/1/filter.php?i=${finalizedSearch}`\n            )\n            .then((response) => {\n              changeResults(response);\n            });\n          break;\n        case \"category\":\n          axios\n            .get(\n              `https://www.themealdb.com/api/json/v1/1/filter.php?c=${finalizedSearch}`\n            )\n            .then((response) => {\n              changeResults(response);\n            });\n          break;\n        default:\n          axios\n            .get(\n              `https://www.themealdb.com/api/json/v1/1/filter.php?a=${finalizedSearch}`\n            )\n            .then((response) => {\n              changeResults(response);\n            });\n      }\n    };\n\n    getResults();\n  }, [finalizedSearch, finalizedSelected]);\n\n  return (\n    <>\n      <NavBar\n        selected={selected}\n        setSelected={setSelected}\n        searched={searched}\n        setSearched={setSearched}\n        finalizedSearch={finalizedSearch}\n        setFinalizedSearch={setFinalizedSearch}\n        setURL={setURL}\n        finalizedSelected={finalizedSelected}\n        setFinalizedSelected={setFinalizedSelected}\n      />\n      <ResultsGrid results={results} loaded={loaded} />\n    </>\n  );\n};\n\nexport default ResultsPage;\n","const data = {\n  meals: [\n    {\n      strMeal: \"Brown Stew Chicken\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/sypxpx1515365095.jpg\",\n      idMeal: \"52940\",\n    },\n    {\n      strMeal: \"Chicken & mushroom Hotpot\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/uuuspp1511297945.jpg\",\n      idMeal: \"52846\",\n    },\n    {\n      strMeal: \"Chicken Alfredo Primavera\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/syqypv1486981727.jpg\",\n      idMeal: \"52796\",\n    },\n    {\n      strMeal: \"Chicken Basquaise\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/wruvqv1511880994.jpg\",\n      idMeal: \"52934\",\n    },\n    {\n      strMeal: \"Chicken Congee\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/1529446352.jpg\",\n      idMeal: \"52956\",\n    },\n    {\n      strMeal: \"Chicken Handi\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/wyxwsp1486979827.jpg\",\n      idMeal: \"52795\",\n    },\n    {\n      strMeal: \"Kentucky Fried Chicken\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/xqusqy1487348868.jpg\",\n      idMeal: \"52813\",\n    },\n    {\n      strMeal: \"Kung Pao Chicken\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/1525872624.jpg\",\n      idMeal: \"52945\",\n    },\n    {\n      strMeal: \"Pad See Ew\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/uuuspp1468263334.jpg\",\n      idMeal: \"52774\",\n    },\n    {\n      strMeal: \"Piri-piri chicken and slaw\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/hglsbl1614346998.jpg\",\n      idMeal: \"53039\",\n    },\n    {\n      strMeal: \"Thai Green Curry\",\n      strMealThumb:\n        \"https://www.themealdb.com/images/media/meals/sstssx1487349585.jpg\",\n      idMeal: \"52814\",\n    },\n  ],\n};\n\nconst queryParams = [\"name\", \"ingredient\", \"category\", \"area\"];\n\nexport default data;\nexport { queryParams };\n","export default __webpack_public_path__ + \"static/media/search-btn.9cd876f2.svg\";","import React from \"react\";\nimport searchImgSource from \"../imgs/search-btn.svg\";\nimport \"../styles/SearchButton.css\";\n\nconst SearchButton = () => {\n  return (\n    <button type=\"submit\" className=\"search-btn-small\">\n      <img src={searchImgSource} alt=\"\" className=\"search-img\" />\n      Search\n    </button>\n  );\n};\n\nexport default SearchButton;\n","import \"../styles/HomePage.css\";\nimport Logo from \"./Logo\";\nimport { useRef, useEffect } from \"react\";\nimport { queryParams } from \"../data\";\nimport { useGlobalContext } from \"../context\";\nimport { useHistory } from \"react-router-dom\";\nimport SearchButton from \"./SearchButton\";\n\nconst Button = ({ button, selected, changeSelected }) => {\n  return (\n    <button\n      onClick={() => changeSelected(button)}\n      className={`nav-button ${\n        selected.toLowerCase() === button.toLowerCase() ? \"bottom-border\" : \"\"\n      }`}\n    >\n      {button.toUpperCase()}\n    </button>\n  );\n};\n\nconst NavBar = ({ buttons, selected, changeSelected }) => {\n  return (\n    <div className=\"nav-bar\">\n      {buttons.map((button) => (\n        <Button\n          key={button}\n          button={button}\n          selected={selected}\n          changeSelected={changeSelected}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst HomePage = () => {\n  const buttons = queryParams;\n  const inputRef = useRef(undefined);\n  const {\n    selected,\n    setSelected,\n    searched,\n    setSearched,\n    setFinalizedSearch,\n    setFinalizedSelected,\n  } = useGlobalContext();\n  const history = useHistory();\n\n  const changeSelected = (button) => {\n    setSelected(button);\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    setFinalizedSearch(searched);\n    setFinalizedSelected(selected);\n    history.push(\"/results\");\n  };\n\n  useEffect(() => {\n    const inputElement = inputRef.current;\n    inputElement.focus();\n  }, []);\n\n  return (\n    <>\n      <section className=\"hero\">\n        <div className=\"homepage-logo\">\n          <Logo />\n        </div>\n        <NavBar\n          buttons={buttons}\n          selected={selected}\n          changeSelected={changeSelected}\n        />\n        <form className=\"home-input-form\" onSubmit={(e) => submit(e)}>\n          <div className=\"input-container\">\n            <input\n              className=\"home-input\"\n              style={{ height: \"3rem\" }}\n              type=\"text\"\n              value={searched}\n              onChange={(e) => setSearched(e.target.value)}\n              ref={inputRef}\n              placeholder={`Seach by ${selected}`}\n            />\n          </div>\n          <SearchButton />\n        </form>\n      </section>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Logo from \"./Logo\";\nimport \"../styles/ErrorPage.css\";\n\nconst Header = ({ text }) => {\n  return <h1 className=\"error-message\">{text}</h1>;\n};\n\nconst Link = ({ text, link }) => {\n  return (\n    <a href={link} className=\"link\">\n      {text.toUpperCase()}\n    </a>\n  );\n};\n\nconst ErrorPage = () => {\n  const errorMessage = \"Sorry! We could not find the page you're looking for!\";\n  const homeText = \"home\";\n  const homeLink = \"/\";\n\n  return (\n    <div>\n      <div className='homepage-logo'>\n         <Logo />\n      </div>\n      <div className=\"flex-container\">\n        <Header text={errorMessage} />\n        <Link text={homeText} link={homeLink} />\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React, { useState, useEffect } from \"react\";\nimport NavBar from \"./NavBar\";\nimport \"../styles/ItemPage.css\";\nimport { useGlobalContext } from \"../context\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst ItemPage = () => {\n  const {\n    setURL,\n    selected,\n    setSelected,\n    searched,\n    setSearched,\n    setFinalizedSearch,\n    setFinalizedSelected,\n  } = useGlobalContext();\n  const { name } = useParams();\n  const [info, setInfo] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n\n  useEffect(() => {\n    const getIngredients = (obj) => {\n      let count = 1;\n      const ingredients = [];\n      while (\n        obj[`strIngredient${count}`] !== \"\" &&\n        obj[`strIngredient${count}`] !== undefined\n      ) {\n        if (\n          obj[`strIngredients${count}`] === \"\" ||\n          obj[`strMeasure${count}`] === \"\"\n        ) {\n          throw new Error(\n            \"Number of ingredients don't match the number of measurements in the api call\"\n          );\n        }\n        ingredients.push({\n          name: obj[`strIngredient${count}`],\n          measurement: obj[`strMeasure${count}`],\n        });\n        count++;\n      }\n      return ingredients;\n    };\n\n    if (name !== undefined) {\n      const actualName = name.replaceAll(\"-\", \" \");\n      axios\n        .get(\n          `https://www.themealdb.com/api/json/v1/1/search.php?s=${actualName}`\n        )\n        .then((meals) => {\n          // Get first meal in response object\n          const { strMeal, strArea, strMealThumb, strYoutube } =\n            meals.data.meals[0];\n          const embeddedURL = strYoutube.replace(\"watch?v=\", \"embed/\");\n          setIngredients(getIngredients(meals.data.meals[0]));\n          setInfo({ strMeal, strArea, strMealThumb, embeddedURL });\n        });\n    }\n  }, [name, setIngredients]);\n\n  return (\n    <>\n      <NavBar\n        setURL={setURL}\n        selected={selected}\n        setSelected={setSelected}\n        searched={searched}\n        setSearched={setSearched}\n        setFinalizedSearch={setFinalizedSearch}\n        setFinalizedSelected={setFinalizedSelected}\n      />\n      <div className=\"content-section\">\n        <div className=\"item-grid-container\">\n          <section className=\"name-section\">\n            <h1 className=\"name\">{info.strMeal}</h1>\n            <p>{info.strArea}</p>\n          </section>\n          <section className=\"image-section\">\n            <img className=\"meal-img\" src={info.strMealThumb} alt=\"meal\" />\n          </section>\n          <section className=\"ingredients-section\">\n            <h2 className=\"ingredients-header\">Ingredients</h2>\n            {ingredients.map(({ name, measurement }) => {\n              return (\n                <div key={name} className=\"ingredient\">\n                  <p className=\"ingredient-name\">{name}</p>\n                  <p className=\"measurement\">{measurement}</p>\n                </div>\n              );\n            })}\n          </section>\n          <section className=\"youtube-section\">\n            <iframe\n              className=\"youtube-video\"\n              title=\"instructional video\"\n              src={info.embeddedURL}\n              frameBorder=\"0\"\n            ></iframe>\n          </section>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ItemPage;\n","import \"../styles/App.css\";\nimport ResultsPage from \"./ResultsPage\";\nimport HomePage from \"./HomePage\";\nimport ErrorPage from \"./ErrorPage\";\nimport { Switch, Route } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport ItemPage from \"./ItemPage\";\nimport { AppProvider } from \"../context\";\n\nconst App = () => {\n  // State variable for current selected query\n  const [selected, setSelected] = useState(\"name\");\n\n  // State variable for input form control parameter (search param)\n  const [searched, setSearched] = useState(\"\");\n\n  // Need another search state to trigger re-render when form is submitted\n  const [finalizedSearch, setFinalizedSearch] = useState(\"\");\n  const [finalizedSelected, setFinalizedSelected] = useState(\"\");\n\n  const [isShowingMobileView, setIsShowingMobileView] = useState(false);\n\n  // Adds search text when the layout switches to mobile view\n  // Remember to update width if the css is changed\n  const handleResize = () => {\n    if (window.innerWidth <= 377) {\n      setIsShowingMobileView(true);\n    } else {\n      setIsShowingMobileView(false);\n    }\n  };\n\n  useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return (\n    <AppProvider\n      value={{\n        selected,\n        setSelected,\n        searched,\n        setSearched,\n        finalizedSearch,\n        setFinalizedSearch,\n        finalizedSelected,\n        setFinalizedSelected,\n        isShowingMobileView,\n      }}\n    >\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/results\" exact>\n          <ResultsPage />\n        </Route>\n        <Route path=\"/results/:name\" exact>\n          <ItemPage />\n        </Route>\n        <Route path=\"*\">\n          <ErrorPage />\n        </Route>\n      </Switch>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}